<script>
jQuery(document).ready(function($){

  var positionsUtils = {
    renderJSON : function(r) {
      for(var i=0;i<r.groups.length;i++)
      {
        var position = "";
        if(r.positions[i] !== null)
          position = r.positions[i].position.name
      
        positionsUtils.append_position_line(r.groups[i].group,position);
      }
    },

    error : function(result) {
      if(result.statusText != "abort")
        $("#error").show();
    },

    complete : function() {
      $("#loading").hide();
      loadPositions.fetchingPositions = null;
    },

    append_position_line : function(group, position) {
      var html_str = "<tr><td class='group' abbr='"+group.id+"'>"+group.name+"</td> \
                      <td class='position'><select id='group_role'> \
                      <option "+((position == "1") ? "selected" : "")+" value='1'>Animador</option> \
                      <option "+((position == "2") ? "selected" : "")+" value='2'>Vice-Animador</option> \
                      <option "+((position == "3") ? "selected" : "")+" value='3'>Secret√°rio</option> \
                      <option "+((position == "4") ? "selected" : "")+" value='4'>Tesoureiro</option> \
                      <option "+((position == "5") ? "selected" : "")+" value='5'>Representante Solsef</option> \
                      <option "+((position == "6") ? "selected" : "")+" value='6'>Membro</option> \
                      <option "+((position == "7") ? "selected" : "")+" value='7'>Outro</option> \
                      </select></td></tr>";
      $("#positions tbody").append(html_str);
    }
  }

  var loadPositions = {
    fetchingPositions : null,

    init : function() {
      $("#error").hide();
      //$("#positions").hide();
      $("#loading").hide();
      loadPositions.loadTable();
      loadPositions.addCheckboxListener();
    },

    loadTable : function() { 
      loadPositions.fetchingPositions = $.ajax({
        url: window.location.href.replace(/\#.*/,"").replace("edit","positions.json"),
        cache: false,
        success: function(r) {
          positionsUtils.renderJSON(r);
          $("#positions").show();
        },
        error: positionsUtils.error,
        complete: positionsUtils.complete
      });
    },

    load_position_for_group : function(group) {
      if(loadPositions.fetchingPositions)
        loadPositions.fetchingPositions.abort();
      
      loadPositions.fetchingPositions = $.ajax({
        url: window.location.href.replace(/\#.*/,"").replace("edit","positions.json")+"?group_id="+group.id,
        cache: false,
        beforeSend: function(){
          $("#error").hide();
          $("#loading").show();
        },
        success: function(r) {
          if(r.groups === null)
            positionsUtils.append_position_line(group,"");
          else
            positionsUtils.renderJSON(r);
          $("#positions").show();
        },
        error: positionsUtils.error,
        complete: positionsUtils.complete
      });
    },

    addCheckboxListener : function() {
      $("#record_groups_input").delegate('input:checkbox', 'click', function(event){
        if($(this).is(":checked"))
        {
          var group = {
            'id': event.target.defaultValue,
            'name': $.trim(event.target.nextSibling.data)
          };
          loadPositions.load_position_for_group(group);
        }
        else
        {
          $("#positions tbody td[abbr='"+event.target.defaultValue+"']").parent().remove();
          if($("#positions tbody tr").size() === 0)
            $("#positions").hide();
        }
      });
    }
  }

  var updateUser = {
    init : function() {
      updateUser.addUpdateButtonListener();
    },

    addUpdateButtonListener : function() {
      $("fieldset.buttons").delegate('#update-button','click',function(event){
        var form = $("form.formtastic"),
            encodedURIofPositions = updateUser.getPositionsURI();
        
        jQuery.ajax({
          type: 'PUT',
          data: form.serialize()+encodedURIofPositions,
          url: window.location.href.replace(/\#.*/,"").replace("edit",""),
          cache: false,
          dataType: "json",
          error: function() {
            $("#flash").renderFlash("notifier.actions.failure", "error", {"action":"actualizar utilizador"});
            return false;
          },
          success: function(location) {
            window.location.href = location;
          }
        });

        event.preventDefault();
      });
    },

    getPositionsURI : function() {
      var groups = $("#positions .group"),
          positions = $("#positions .position").find("option:selected"),
          uri = [];

      for(var i=0;i<groups.length;i++)
      {
        uri.push("&record[positions][groups][]=",encodeURI(groups[i].abbr),"&record[positions][names][]=",encodeURI(positions[i].value));
      }
      
      return uri.join("");
    }
  }

  loadPositions.init();
  updateUser.init();
});
</script>

<div class="content">
  <div class="inner">
    <h2><%= I18n::t('admin.users.form.edit') + ' - ' + link_to(h(@record.nickname_or_first_and_last_name), admin_user_path(@record)) %></h2>
    <% semantic_form_for :record, @record, 
                         :url => admin_user_path(@record), 
                         :html => { :method => :put, :id => "edit_user_#{@record.id}", :multipart => true } do |form| -%>
      <%= render :partial => 'form', :locals => { :form => form } %>

      <table id="positions">
        <thead>
          <th><%= I18n::t('admin.users.form.positions_table.group') %></th>
          <th><%= I18n::t('admin.users.form.positions_table.position') %></th>
        </thead>
        <tbody>
        </tbody>
      </table>

      <div id="error">
        <h2><%= t('admin.users.edit.error.title') %></h2>
        <p><%= t('admin.users.edit.error.explanation') %><p>
      </div>
      
      <div id="loading">
        <h2><%= t('admin.users.edit.loading') %></h2>
      </div>

      <% form.buttons do -%>
        <%= form.button      :label => I18n::t('admin.users.form.update_button'),
                             :button_html => { :class => 'button positive', :id => "update-button" } %>
        <%= form.button_link I18n::t('admin.users.form.cancel_button'), admin_users_path,
                             :button_html => { :class => 'button negative' } %>
      <% end -%>
    <% end -%>
  </div>
</div>
