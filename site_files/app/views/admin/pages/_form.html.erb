<% content_for(:head) do -%>
  <%= javascript_include_tag 'edit_preview' %>
<% end -%>

<style>
.jqifade{
	position: absolute; 
	background-color: #aaaaaa; 
}
div.jqi{ 
	width: 750px; 
	font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; 
	background-color: #ffffff; 
	font-size: 11px; 
	text-align: left; 
	border: solid 1px #eeeeee;
	border-radius: 10px;
	-moz-border-radius: 10px;
	-webkit-border-radius: 10px;
	padding: 7px;
}
div.jqi .jqicontainer{ 
	font-weight: bold; 
}
div.jqi .jqiclose{ 
	position: absolute;
	top: 4px; right: -2px; 
	width: 18px; 
	cursor: default; 
	color: #bbbbbb; 
	font-weight: bold; 
}
div.jqi .jqimessage{ 
	height: 300px;
	padding: 10px; 
	line-height: 20px; 
	color: #444444; 
}
div.jqi .jqibuttons{ 
	text-align: right; 
	padding: 5px 0 5px 0; 
	border: solid 1px #eeeeee; 
	background-color: #f4f4f4;
	clear: left;
	margin: 0px 10px 10px 10px;
}
div.jqi button.popbutton{ 
	padding: 3px 10px; 
	margin: 0 15px; 
	background-color: #2F6073;
	background: #2F6073; 
	border: solid 1px #f4f4f4; 
	font-weight: bold; 
	font-size: 12px; 
	color: #ffffff;
	float: none;
}
div.jqi button.popbutton:hover{ 
	background-color: #728A8C;
}

#jqi_state0_buttonOk{
	margin: 0 -5px;
}

div.jqi button.jqidefaultbutton{ 
	/*background-color: #8DC05B;*/
	background-color: #BF5E26;
}

div.jqi button.jqidefaultbutton:hover{ 
	background-color: #BF5E26;
}

.jqiwarning .jqi .jqibuttons{ 
	background-color: #BF5E26;
}

input.cg_group_name_textfield {
	width: 20em;
}

.cg_user{
	width: 138px;
	float:left;
	display: inline;
	border: inherit;
	border-radius: 2px;
	margin: 9px;
	padding: 7px 0px 2px 7px;	
	vertical-align: top;
	cursor: pointer;
	background: inherit;
	color: inherit;
}

.cg_users .title{
	float:left;
}

#selected {
	margin-top: 20px;
}

#selected, #not_selected {
	float:left;
	min-height: 40px;
}

.title + .cg_user {
	clear:left;
}

#selected > .cg_user{
	background: -o-linear-gradient(top,#63ABF7,#5E99CD);
	background: -webkit-gradient(linear,left top,left bottom,from(#63ABF7),to(#5E99CD));
	background: -moz-linear-gradient(top,#63ABF7,#5E99CD);
	background: -o-linear-gradient(top,#63ABF7,#5E99CD);
	color: white;
	border: 1px solid #779;
}

#not_selected > .cg_user {
	background: -o-linear-gradient(top,white,#F4F4F4);
	background: -webkit-gradient(linear,left top,left bottom,from(white),to(#F4F4F4));
	background: -moz-linear-gradient(top,white,#F4F4F4);
	background: -o-linear-gradient(top,white,#F4F4F4);
	color: black;
	border: 1px solid #DDD;
	border-radius: 2px;
}

.cg_user:hover{
	border: 1px solid #BBB;
	-moz-box-shadow: 2px 2px 4px #999;
	-webkit-box-shadow: 2px 2px 4px #999;
	box-shadow: 2px 2px 4px #999;
	opacity: 1;
}

.cg_user_image{
	float:left;
	margin-right: 4px;
}

.cg_user_name{
	display: inline-block;
	width: 75px;
	white-space: pre;           /* CSS 2.0 */
	white-space: pre-wrap;      /* CSS 2.1 */
	white-space: pre-line;      /* CSS 3.0 */
	white-space: -pre-wrap;     /* Opera 4-6 */
	white-space: -o-pre-wrap;   /* Opera 7 */
	white-space: -moz-pre-wrap; /* Mozilla */
	white-space: -hp-pre-wrap;  /* HP Printers */
	word-wrap: break-word;      /* IE 5+ */
}

.cg_users{
	clear:left;

}

.cg_search_block{
	border: solid 1px #eeeeee; 
	background-color: #f4f4f4;
	display:table;
	padding: 5px 30px 5px 15px;
    width:700px;
}

.cg_search_block .title{
	display:block;
}

.cg_search{
	width:250px;
}

.cg_select_all_block, .cg_search{
	float:left;
	margin-right: 10px;
}
.cg_deselect_all_block, .cg_blocks{
	float:left;
}

.cg_g_n_label{
	margin-right:5px;
}

.cg_select_all_block,.cg_deselect_all_block,.cg_group_name{
	margin-bottom:10px;
}

.cg_header{
	text-align:center;
	vertical-align:middle;
	padding: 5px 0; 
	border: solid 1px #eeeeee; 
	background-color: #f4f4f4;
	margin-bottom:10px;
	margin-top:0px;
}

.cg_content{
	padding:0px 15px;
	position:relative;
	width:100%;
}

body
{
 	margin:0;
	padding:0;
}

background-color:#b0e0e6;
}

ul.token-input-list-facebook{
	width:inherit;
}

div.token-input-dropdown-facebook {
	z-index: 1000;
	width:248px;
}

</style>

<%= the_markup %>

<script>

jQuery.noConflict();
  
jQuery(document).ready(function($){
 
   	var SELECTION = {
	    selected: [],
	    addItem: function(id) {
	        if (typeof(id) === "string") {
	            id = parseInt(id, 10);
	        }
	        this.selected.push(id);
	    },
	    contains: function(id) {
	        if (typeof(id) === "string") {
	            id = parseInt(id, 10);
	        }
	        if (this.selected.indexOf(id) != -1 || this.selected.indexOf(id) != -1) {
	            return true;
	        }

	        return false;
	    },
	    removeItem: function(id) {
	        if (typeof(id) === "string") {
	            id = parseInt(id, 10);
	        }
	        var index = this.selected.indexOf(id);
	        this.selected.splice(index, 1);
	    },
	    getInfo: function() {
	        return this.selected.toString();
	    },
	    clear: function() {
	        this.selected = [];
	    }
	};

	jQuery.fn.selectUser = function() {
	    $(".cg_user").click(function() {
	        var div_id = $(this).parent().attr("id");
	        var no_users_selected = parseInt($("#selected").children(":nth-child(1)").text().match(/(\d+)/g), 10);
	        var no_users_not_selected = parseInt($("#not_selected").children(":nth-child(1)").text().match(/(\d+)/g), 10);
	        var selected_text = $("#selected").children(":nth-child(1)");
	        var not_selected_text = $("#not_selected").children(":nth-child(1)");
	        if (div_id === "selected") {
	            SELECTION.removeItem($(this).attr("id").split("_")[2]);
	            $("#selected").remove($(this).attr("id"));
	            $(this).appendTo($("#not_selected"));
	            selected_text.text(selected_text.text().replace(/(\d+)/g, no_users_selected - 1));
	            not_selected_text.text(not_selected_text.text().replace(/(\d+)/g, no_users_not_selected + 1));
	        }
	        else {
	            SELECTION.addItem($(this).attr("id").split("_")[2]);
	            $("#not_selected").remove($(this).attr("id"));
	            $(this).appendTo($("#selected"));
	            selected_text.text(selected_text.text().replace(/(\d+)/g, no_users_selected + 1));
	            not_selected_text.text(not_selected_text.text().replace(/(\d+)/g, no_users_not_selected - 1));
	        }
	    });
	};

	jQuery.fn.selectByGroup = function() {
	    $("#cg_select_all").change(function() {
	        var group_id = $("#cg_select_all option:selected").val();
	        $("#cg_select_all option")[0].selected = true;
	        $.each(GROUPS[group_id], function(index, value) {
	            $(this).selectUserWithId(value);
	            SELECTION.addItem(value);
	        });
	    });
	};

	jQuery.fn.deselectByGroup = function() {
	    $("#cg_deselect_all").change(function() {
	        var group_id = $("#cg_deselect_all option:selected").val();
	        $("#cg_deselect_all option")[0].selected = true;
	        $.each(GROUPS[group_id], function(index, value) {
	            $(this).deselectUserWithId(value);
	            SELECTION.removeItem(value);
	        });
	    });
	};

	jQuery.fn.selectUserWithId = function(id) {
	    var user_id = "#cg_user_" + id;
	    var user = $(user_id);
	    if (user.parent().attr("id") === "not_selected") {
	        $("#not_selected").remove(user_id);
	        user.appendTo($("#selected"));
	        var no_users_selected = parseInt($("#selected").children(":nth-child(1)").text().match(/(\d+)/g), 10);
	        var no_users_not_selected = parseInt($("#not_selected").children(":nth-child(1)").text().match(/(\d+)/g), 10);
	        var selected_text = $("#selected").children(":nth-child(1)");
	        var not_selected_text = $("#not_selected").children(":nth-child(1)");
	        selected_text.text(selected_text.text().replace(/(\d+)/g, no_users_selected + 1));
	        not_selected_text.text(not_selected_text.text().replace(/(\d+)/g, no_users_not_selected - 1));
	    }
	};

	jQuery.fn.deselectUserWithId = function(id) {
	    var user_id = "#cg_user_" + id;
	    var user = $(user_id);
	    if (user.parent().attr("id") === "selected") {
	        $("#selected").remove(user_id);
	        user.appendTo($("#not_selected"));
	        var no_users_selected = parseInt($("#selected").children(":nth-child(1)").text().match(/(\d+)/g), 10);
	        var no_users_not_selected = parseInt($("#not_selected").children(":nth-child(1)").text().match(/(\d+)/g), 10);
	        var selected_text = $("#selected").children(":nth-child(1)");
	        var not_selected_text = $("#not_selected").children(":nth-child(1)");
	        selected_text.text(selected_text.text().replace(/(\d+)/g, no_users_selected - 1));
	        not_selected_text.text(not_selected_text.text().replace(/(\d+)/g, no_users_not_selected + 1));
	    }
	};

	function submitPopUp(buttonValue, message, form) {
	    if (buttonValue === true) {
	        group_name = message.find('#group_name');
	        if (group_name.val() === "") {
	            group_name.css("border-color", "#ff0000");
	            return false;
	        }

	        // Ajax call with group_name.val() and SELECTION.getInfo()
	        jQuery.ajax({
	            type: 'POST',
	            data: {
	                selected: SELECTION.getInfo(),
	                name: group_name.val()
	            },
	            url: "http://" + window.location.host + "/api/create_groups/create_group",
	            dataType: 'json',
	            error: function() {

	            },
	            success: function(r) {}
	        });
	    }


	    return true;
	}

	function exit() {
	    $("body").css("overflow-y", "scroll");
	    SELECTION.clear();
	    if ($("#record_group_id option:selected").val() === "") {
	        $("#record_group_id option")[0].selected = true;
	    }
	}

	function addUser(item) {
	    $(this).selectUserWithId(item.id);
	    $(".token-input-token-facebook").remove();
	    SELECTION.addItem(item.id);
	}

	function filterUsers(results) {
	    var filtered_results = results.filter(function(val) {
	        return !SELECTION.contains(val.id);
	    });
	    return filtered_results;
	}

	function loadTokenInput() {
	    $("#member_search").tokenInput(USERS, {
	        resultsFormatter: function(item) {
	            return "<li>" + item.image + " " + item.name + "</li>";
	        },
	        minChars: 2,
	        onAdd: addUser,
	        onResult: filterUsers,
	        disableCache: true,
	        noResultsText: "No unselected users found...",
	        hintText: "Type a user name to be selected..."
	    });
	}

	$("#record_group_id").change(function() {
	    if ($("#record_group_id option:selected").text() === "Create New...") {

	        $("body").css("overflow", "hidden");
	        $.prompt(HTML, {
	            buttons: {
	                Ok: true,
	                Cancel: false
	            },
	            loaded: loadTokenInput,
	            callback: exit,
	            submit: submitPopUp
	        });
	        $(this).selectUser();
	        $(this).selectByGroup();
	        $(this).deselectByGroup();
	    }
	});
	
	//Apply markitup link
	$(".markitup_hint_wrapper .inline-hints").html(function(){
		return '<a href="#" class="markitup_hint">'+ $(this).text() + '</a>';
	});
	
});

</script>


<% form.input_field_set do -%>
  <%= form.input :global_category,
                 :label    => I18n::t('admin.pages.columns.global_category') %>
  <%= form.input :title,
                 :label    => I18n::t('admin.pages.columns.title') %>
  <%= form.input :body,
                 :as       => 'text',
                 :label    => I18n::t('admin.pages.columns.body'),
                 :input_html => { :class => "textile" },
                 :hint     => t('admin.pages.form.hints.body') %>
<% end -%>

<% form.input_field_set do -%>
  <%= form.input :slug, 
                 :required => false,
                 :label    => I18n::t('admin.pages.columns.slug'),
                 :hint     => I18n::t('admin.pages.form.hints.slug') %>
  <%= form.input :show_in_navigation,
                 :required => false,
                 :as       => 'boolean',
                 :label    => I18n::t('admin.pages.columns.show_in_navigation'),
                 :hint     => I18n::t('admin.pages.form.hints.show_in_navigation') %>
  <% if configatron.show_announcements_option %>
    <%= form.input :show_announcements,
                   :required => false,
                   :as       => 'boolean',
                   :label    => t('admin.pages.columns.show_announcements'),
                   :hint     => t('admin.pages.form.hints.show_announcements') %>
  <% end %>
  <%= form.input :priority,
                 :as         => 'select',
                 :required   => false,
                 :collection => (1..99),
                 :selected   => (@record) ? @record.priority : 0,
                 :label      => I18n::t('admin.pages.columns.priority'),
                 :hint       => I18n::t('admin.pages.form.hints.priority') %>
  <%= form.input :has_comments,
                 :required => false,
                 :as       => 'boolean',
                 :label    => I18n::t('admin.pages.columns.has_comments'),
                 :hint     => I18n::t('admin.pages.form.hints.has_comments') %>
  <%= form.input :group,
                 :required => false,
                 :as    => :select,
                 :include_blank => false,
                 :collection => Group.all.inject([["All",0]]) { |result, element| result << [element.name,element.id];result}+[["Create New...",""]],
      			 :label => t('admin.posts.columns.groups'),
      			 :hint  => t('admin.posts.form.hints.groups') %>

<% end -%>
