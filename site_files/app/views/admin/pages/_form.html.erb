<% content_for(:head) do -%>
  <%= javascript_include_tag 'edit_preview' %>
<% end -%>

<style>
.jqifade{
	position: absolute; 
	background-color: #aaaaaa; 
}
div.jqi{ 
	width: 750px; 
	font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; 
	background-color: #ffffff; 
	font-size: 11px; 
	text-align: left; 
	border: solid 1px #eeeeee;
	border-radius: 10px;
	-moz-border-radius: 10px;
	-webkit-border-radius: 10px;
	padding: 7px;
}
div.jqi .jqicontainer{ 
	font-weight: bold; 
}
div.jqi .jqiclose{ 
	position: absolute;
	top: 4px; right: -2px; 
	width: 18px; 
	cursor: default; 
	color: #bbbbbb; 
	font-weight: bold; 
}
div.jqi .jqimessage{ 
	height: 300px;
	padding: 10px; 
	line-height: 20px; 
	color: #444444; 
}
div.jqi .jqibuttons{ 
	text-align: right; 
	padding: 5px 0 5px 0; 
	border: solid 1px #eeeeee; 
	background-color: #f4f4f4;
}
div.jqi button.popbutton{ 
	padding: 3px 10px; 
	margin: 0 10px; 
	background-color: #2F6073;
	background: #2F6073; 
	border: solid 1px #f4f4f4; 
	font-weight: bold; 
	font-size: 12px; 
	color: #ffffff;
	float: none;
}
div.jqi button.popbutton:hover{ 
	background-color: #728A8C;
}

div.jqi button.jqidefaultbutton{ 
	/*background-color: #8DC05B;*/
	background-color: #BF5E26;
}

div.jqi button.jqidefaultbutton:hover{ 
	background-color: #BF5E26;
}

.jqiwarning .jqi .jqibuttons{ 
	background-color: #BF5E26;
}

input.cg_group_name_textfield {
	width: 20em;
}

.cg_user{
	width: 240px;
	float:left;
	display: inline;
}

.cg_user_name{
	vertical-align: top;
}

.cg_users{
	clear:left;
}

.cg_search{
	
}

.token-input-list-facebook{
}

.cg_search_button{
	position:relative;
	margin-left:355px;
}

div.token-input-dropdown-facebook {
	z-index: 1000;
}

</style>

<%= the_markup %>

<script>

jQuery.noConflict();
  
jQuery(document).ready(function($){
 
  function submitPopUp(){
    $("body").css("overflow","scroll");	
  }

  function addUser(item){
    $(".cg_users").append('<div id="cg_user_'+item.id+'" class="cg_user"><span class="cg_user_image">'+item.image+'</span><span class="cg_user_name">'+item.name+'</span>');	
  }

  function removeUser(item){
    $("#cg_user_"+item.id).remove();
  }

  function loadTokenInput(){
	$( "#member_search" ).tokenInput(USERS, {
		resultsFormatter: function(item){return "<li>"+item.image+" "+item.name+"</li>"},
		minChars: 2,
		onAdd: addUser,
		onDelete: removeUser
	}); 
  } 

  $("#record_group_id").change(function(){
    if($("#record_group_id option:selected").text() === "Create New...")
    {
	  $("body").css("overflow","hidden");
	  $.prompt(HTML,{ 
		buttons: { Ok: true, Cancel: false },
		loaded: loadTokenInput,
		callback: submitPopUp
	  });
	
    }
  });

});

</script>


<% form.input_field_set do -%>
  <%= form.input :title,
                 :label    => I18n::t('admin.pages.columns.title') %>
  <%= form.input :body,
                 :as       => 'text',
                 :label    => I18n::t('admin.pages.columns.body'),
                 :hint     => I18n::t('admin.pages.form.hints.body').html_safe %>
<% end -%>

<% form.input_field_set do -%>
  <%= form.input :slug, 
                 :required => false,
                 :label    => I18n::t('admin.pages.columns.slug'),
                 :hint     => I18n::t('admin.pages.form.hints.slug') %>
  <%= form.input :show_in_navigation,
                 :required => false,
                 :as       => 'boolean',
                 :label    => I18n::t('admin.pages.columns.show_in_navigation'),
                 :hint     => I18n::t('admin.pages.form.hints.show_in_navigation') %>
  <% if configatron.show_announcements_option %>
    <%= form.input :show_announcements,
                   :required => false,
                   :as       => 'boolean',
                   :label    => t('admin.pages.columns.show_announcements'),
                   :hint     => t('admin.pages.form.hints.show_announcements') %>
  <% end %>
  <%= form.input :priority,
                 :as         => 'select',
                 :required   => false,
                 :collection => (1..99),
                 :selected   => @record.priority,
                 :label      => I18n::t('admin.pages.columns.priority'),
                 :hint       => I18n::t('admin.pages.form.hints.priority') %>
  <%= form.input :has_comments,
                 :required => false,
                 :as       => 'boolean',
                 :label    => I18n::t('admin.pages.columns.has_comments'),
                 :hint     => I18n::t('admin.pages.form.hints.has_comments') %>
  <%= form.input :group,
     		     :required => false,
                 :as    => :select,
     		     :collection => Group.all + [Group.new(:id => 0, :name => "Create New...")],
      			 :label => t('admin.posts.columns.groups'),
      			 :hint  => t('admin.posts.form.hints.groups') %>

<% end -%>
