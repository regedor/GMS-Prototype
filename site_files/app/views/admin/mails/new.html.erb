<script>
jQuery.noConflict();

jQuery(document).ready(function($) {

	var values = $("#mail_mailable").val().split(',')
	function split( val ) 
	{
		return val.split( /,\s*/ );
	}
	function extractLast( term ) 
	{
		return split( term ).pop();
	}
	
    
	$( "#mail_recipients" ).bind( "keydown", function( event ) 
	{
			if ( event.keyCode === $.ui.keyCode.TAB && $( this ).data( "autocomplete" ).menu.active ) 
	 	{
	 		event.preventDefault();
	 	}	
	 }).autocomplete(
	 	{
	 		minLength: 0,
	 		source: function( request, response ) 
	 		{
	 			// delegate back to autocomplete, but extract the last term
	 			response( $.ui.autocomplete.filter(values, extractLast( request.term )));
	 		},
	 		focus: function() 
	 		{
	 			// prevent value inserted on focus
	 			return false;
	 		},
	 		select: function( event, ui ) 
	 		{
	 			var terms = split( this.value );
	 			// remove the current input
	 			terms.pop();
	 			// add the selected item
	 			terms.push( ui.item.value );
	 			// add placeholder to get the comma-and-space at the end
	 			terms.push( "" );
	 			this.value = terms.join( ", " );
	 			return false;
	 		}
	 	});
	});
</script>
<div class="active-scaffold">
  <div class="view">
    <% form_for @mail, :url=>admin_mails_path, :method=>"post" do |f| -%>
      <h4><%= t("admin.mails.title") %></h4>
        <ol class="form">
          <li class="form-element">
            <dl>
              <dt><label>To:</label></dt> 
              <dd> <%= text_field_tag :mail_recipients, "", :size => 30 %></dd> 
            </dl>
          </li>

          <li class="form-element">
            <dl>
              <dt><label>Subject:</label></dt> 
              <dd> <%= f.text_field :subject %></dd> 
            </dl>
          </li>
          
          <li class="form-element">
            <dl>
              <dt><label>Message:</label></dt> 
              <dd> <%= f.text_area :message %></dd> 
              <%= f.hidden_field(:mailable) %>
            </dl>
          </li>
        </ol>
        
       <p class="form-footer">
        <%= f.submit "Send email", :class => "submit" %>
      </p>
    <% end -%>
  </div>
</div>

<% if File.exists?(Rails.root.join("app", "views", params[:controller], "_sidebar.html.erb")) %>
  <% content_for :sidebar do -%>
    <%= render :partial => 'sidebar'  %>
  <% end -%>
<% end -%>


