<%
sorting = active_scaffold_config.list.user.sorting
sorting_stages = ['reset', 'ASC', 'DESC']
default_sorting = active_scaffold_config.list.sorting
default_sorting_stages = ['DESC', 'ASC']
-%>
<% active_scaffold_config.list.columns.each do |column| -%>
  <%
  stages = default_sorting.sorts_on?(column) ? default_sorting_stages : sorting_stages
  column_sort_direction = stages.after(sorting.direction_of(column)) || 'ASC'
  sort_params = params_for(:action => :index, :page => 1,
                           :sort => column.name, :sort_direction => column_sort_direction)
  column_header_id = active_scaffold_column_header_id(column)
  -%>
<%# Begin override - substituted code %>
  <th id="<%= column_header_id %>" 
      class="<%= column.css_class unless column.css_class.nil? %> 
             <%= "list_actions" if column.label == "Row mark" %> 
             <%= "sorted #{sorting.direction_of(column).downcase}" if sorting.sorts_on? column %>" 
      title="<%= h column.description %>">
<%# End override %>
  <% if column.sortable? -%>
    <% href = url_for(sort_params) -%>
    <%= link_to_remote column.label,
      { :url => sort_params,
        :before => "addActiveScaffoldPageToHistory('#{href}', '#{controller_id}')",
        :loading => "Element.addClassName('#{column_header_id}','loading');",
        :failure => "ActiveScaffold.report_500_response('#{active_scaffold_id}')",
        :method => :get },
      { :href => href } %>
<%# Begin override - added code %>
    <% elsif column.label == "Row mark" -%>
      <p><input id="row_mark_header" class="row_mark_header" type="checkbox"\></p>
      <%= inplace_edit_control(column) -%>
<%# End override %>
    <% else -%>
      <p><%= column.label %></p>
<%# Begin override - switch lines %>
      <%= inplace_edit_control(column) -%>
    <% end -%>
<%# End override %>
  </th>
<% end -%>
<th class="actions">
</th>
